name: Auto-Approve (reusable)

on:
  workflow_call:
    inputs:
      run_id:
        required: true
        type: string
    secrets:
      GH_PAT:
        required: true

jobs:
  auto-approve:
    runs-on: ubuntu-latest
    permissions:
      deployments: write        # needed for POST /pending_deployments
      contents: read
    env:
      GH_TOKEN: ${{ secrets.GH_PAT }}
      RUN_ID:   ${{ inputs.run_id }}

    steps:
      # authenticate the CLI
      - name: Log in to gh
        run: echo "$GH_TOKEN" | gh auth login --with-token

      # main loop – keeps polling until the promote-latest-version step is completed
      - name: Watch & approve
        run: |
          echo "Watching run $RUN_ID for pending deployments…"

          while true; do
            # list pending deployments for this run
            JSON=$(gh api repos/${{ github.repository }}/actions/runs/$RUN_ID/pending_deployments)
            COUNT=$(echo "$JSON" | jq 'length')

            if [[ "$COUNT" -gt 0 ]]; then
              echo "::notice ::Found $COUNT pending deployment(s) – approving"

              # build arg list: -F environment_ids[]=123 ...
              ARGS=$(echo "$JSON" | jq -r '.[] .environment.id | "-F environment_ids[]=" + tostring' | xargs)

              gh api -X POST \
                repos/${{ github.repository }}/actions/runs/$RUN_ID/pending_deployments \
                $ARGS \
                -F state=approved \
                -F comment="Auto-approved by deploy-bot ✨"
            fi

            # Check if the promote-latest-version job is completed
            JOBS_JSON=$(gh api repos/${{ github.repository }}/actions/runs/$RUN_ID/jobs)
            
            # Check both job ID (name key in JSON) and display name (name field) 
            # Use lowercase for case-insensitive comparison
            PROMOTE_JOB_STATUS=$(echo "$JOBS_JSON" | jq -r '.jobs[] | select((.name | ascii_downcase | contains("Deploy")) or (.name | ascii_downcase | contains("Deploy (reusable)"))) | .conclusion')
            
            if [[ "$PROMOTE_JOB_STATUS" == "success" ]]; then
              echo "::notice ::Promote latest version job completed successfully, stopping auto-approval loop"
              break
            fi
            
            # Also stop if the whole workflow run has completed (as a fallback)
            STATUS=$(gh api repos/${{ github.repository }}/actions/runs/$RUN_ID --jq .status)
            if [[ "$STATUS" == "completed" ]]; then
              echo "::notice ::Workflow run completed, stopping auto-approval loop"
              break
            fi

            sleep 8
          done
