# .github/workflows/prod-auto-approve.yml
name: Auto-Approve (reusable)

on:
  workflow_call:
    inputs:
      run_id:
        type: string
        required: true
      auto_env:            # environment name to auto-approve
        type: string
        required: true
    secrets:
      GH_PAT:              # PAT of a required reviewer
        required: true

jobs:
  auto-approve:
    runs-on: ubuntu-latest
    permissions:
      deployments: write
      contents:   read
    env:
      GH_TOKEN:  ${{ secrets.GH_PAT }}
      RUN_ID:    ${{ inputs.run_id }}
      AUTO_ENV:  ${{ inputs.auto_env }}

    steps:
      - run: echo "$GH_TOKEN" | gh auth login --with-token

      - name: Approve all pending deployments for $AUTO_ENV
        run: |
          echo "Auto-approving environment: $AUTO_ENV"

          while true; do
            # list pending deployments for this workflow run
            PENDING=$(gh api repos/${{ github.repository }}/actions/runs/$RUN_ID/pending_deployments)
            IDS=$(echo "$PENDING" |
                  jq -r --arg env "$AUTO_ENV" \
                  '.[] | select(.environment.name==$env) | .environment.id')

            for ID in $IDS; do
              echo "âœ…  approving env-id $ID"
              gh api -X POST \
                repos/${{ github.repository }}/actions/runs/$RUN_ID/pending_deployments \
                -F environment_ids[]=$ID \
                -F state=approved \
                -F comment="Auto-approved by deploy-bot" || true
            done

            # exit when workflow finished AND no more pending tc-prod
            LEFT=$(gh api repos/${{ github.repository }}/actions/runs/$RUN_ID/pending_deployments |
                   jq -r --arg env "$AUTO_ENV" '[.[] | select(.environment.name==$env)] | length')
            STATUS=$(gh api repos/${{ github.repository }}/actions/runs/$RUN_ID --jq .status)

            [[ $STATUS == "completed" && $LEFT -eq 0 ]] && break
            sleep 8
          done
